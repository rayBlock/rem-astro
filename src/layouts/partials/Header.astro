---
import { Icon } from "astro-icon/components";

import Logo from "@/components/Logo.astro";
import ToggleTheme from "@/components/ToggleTheme.astro";
import ToggleMenu from "@/components/ToggleMenu.astro";
import HeaderBackground from "@/layouts/partials/HeaderBackground.astro";

import { trimSlash, getAsset } from "@/utils/permalinks";
import { Button } from "@/components/ui/button";
import { getLang } from "@/utils/i18n";
import LangPicker from "@/components/LangPicker.astro";
import type { linkSegment } from "@/config/HeaderConfig";

interface Link {
  text: string;
  text_en: string;
  text_fr: string;
  href: string;
  ariaLabel?: string;
  icon?: string;
}
interface ActionLink extends Link {
  target?: "_blank" | "_self" | "_parent" | "_top";
}
interface language {
  i18n: {
    language: string;
    nativeName: string;
    link: string;
  }[];
}
interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links: Array<any>;
  i18n: any[];
  actions?: Array<any>;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showSearch?: boolean;
  showLanguageSwitcher?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  showTwitter?: boolean;
  showGithub?: boolean;
  position?: string;
}

const {
  id = "header",
  links = [],
  actions = [],
  i18n = [],
  isSticky = false,
  isDark = false,
  isFullWidth = false,
  showSearch = false,
  showLanguageSwitcher = false,
  showToggleTheme = false,
  showRssFeed = false,
  showTwitter = false,
  showGithub = false,
  position = "center",
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
const lang = getLang(Astro.url.pathname);
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky, dark: isDark },
    "top-0 z-40 flex-none mx-auto w-full border-b border-gray-50/0 transition-[opacity] ease-in-out",
  ]}
  {...isSticky ? { "data-aw-sticky-header": true } : {}}
  {...id ? { id } : {}}
>
  <div class="absolute inset-0"></div>

  <HeaderBackground />

  <div
    class:list={[
      "relative mx-auto w-full py-3 px-4 xl:px-0 md:flex md:justify-between",
      {
        "max-w-7xl": !isFullWidth,
      },
    ]}
  >
    <div
      class:list={[{ "mr-auto": position === "right" }, "flex justify-between"]}
    >
      <div class="flex items-center justify-center">
        <Logo />
      </div>
      <div class="flex items-center md:hidden">
        <ToggleMenu />
      </div>
    </div>

    <!-- header center section, main navigation menus -->
    <nav
      class="hidden items-center w-full overflow-y-auto overflow-x-hidden md:w-auto md:flex md:overflow-y-visible md:overflow-x-auto md:mx-5"
      aria-label="Main navigation"
    >
      <ul
        class="flex flex-col w-full font-medium md:w-auto md:flex-row md:self-center"
      >
        {
          links.map(
            ({
              text,
              text_en,
              text_fr,
              href,
              links,
              text_de,
              text_th,
              text_ja,
              text_es,
              text_ar,
              text_it,
              text_hi,
              text_zh,
            }) => {
              let singleLinkText: string | undefined = "Ciao Mondo!";
              switch (lang) {
                case "es":
                  singleLinkText = text_es;
                  break;
                case "fr":
                  singleLinkText = text_fr;
                  break;
                case "de":
                  singleLinkText = text_de;
                  break;
                case "en":
                  singleLinkText = text_en;
                  break;
                case "ja":
                  singleLinkText = text_ja;
                  break;
                case "th":
                  singleLinkText = text_th;
                  break;
                // case "ar":
                // linkText = text_ar
                //   break;
                case "it":
                  singleLinkText = text_it;
                  break;
                case "hi":
                  singleLinkText = text_hi;
                  break;
                case "zh":
                  singleLinkText = text_zh;
                  break;

                default:
                  singleLinkText = "Hello World!";
              }

              return (
                <li class={links?.length ? "dropdown" : ""}>
                  {links?.length ? (
                    <>
                      <button class="flex items-center w-full px-4 py-3 whitespace-no-wrap rounded hover:text-dark dark:hover:text-darkmode-dark">
                        {singleLinkText}
                        <Icon
                          name="tabler:chevron-down"
                          class="w-3.5 h-3.5 ml-0.5 hidden md:inline"
                        />
                      </button>

                      <ul class="dropdown-menu md:backdrop-blur-md dark:md:bg-dark rounded md:absolute pl-4 md:pl-0 md:hidden font-medium md:bg-white/90 md:min-w-[200px] drop-shadow-xl">
                        {links.map(
                          ({
                            text: text2,
                            href: href2,
                            text_en,
                            text_fr,
                            text_de,
                            text_th,
                            text_ja,
                            text_es,
                            text_ar,
                            text_it,
                            text_hi,
                            text_zh,
                          }: linkSegment) => {

                            let linkText: string | undefined = "Hello World!";
                            switch (lang) {
                              case "es":
                                linkText = text_es;
                                break;
                              case "fr":
                                linkText = text_fr;
                                break;
                              case "de":
                                linkText = text_de;
                                break;
                              case "en":
                                linkText = text_en;
                                break;
                              case "ja":
                                linkText = text_ja;
                                break;
                              case "th":
                                linkText = text_th;
                                break;
                              case "hi":
                                linkText = text_hi;
                                break;
                              // case "ar":
                              // linkText = text_ar
                              //   break;
                              case "it":
                                linkText = text_it;
                                break;
                              case "zh":
                                linkText = text_zh;
                                break;

                              default:
                                linkText = "Hello World!";
                            }

                            return (
                              <li>
                                {/* TODO: --changeDefaultLocale
                              in the href "en" needs to be your default
                              example: "de" or "fr" or "th"  */}
                                <a
                                  class:list={[
                                    "first:rounded-t last:rounded-b py-2 px-5 block whitespace-no-wrap hover:text-dark dark:hover:text-darkmode-dark md:hover:bg-gray-100 dark:hover:bg-gray-800",
                                    { "aw-link-active": href2 === currentPath },
                                  ]}
                                  href={
                                    lang === "en"
                                      ? `${href2}`
                                      : `/${lang}${href2}`
                                  }
                                >
                                  {/* auto redirectDefaultLocale doesn't work for some reason with sst
                                so we route to / instead of /en for defaultLocale */}
                                  {`${linkText}`}
                                </a>
                              </li>
                            );
                          },
                        )}
                      </ul>
                    </>
                  ) : text === "Home" ? (
                    <a
                      class:list={[
                        "flex items-center py-3 px-4 whitespace-no-wrap rounded hover:text-dark dark:hover:text-darkmode-dark",
                        { "aw-link-active": href === currentPath },
                      ]}
                      href={lang === "en" ? "/" : `/${lang}`}
                    >
                      {/* <Icon name="tabler:home" class="w-8 h-8" /> */}
                      {singleLinkText}
                    </a>
                  ) : (
                    // normal single link
                    <a
                      class:list={[
                        "flex items-center py-3 px-4 whitespace-no-wrap rounded hover:text-dark dark:hover:text-darkmode-dark",
                        { "aw-link-active": href === currentPath },
                      ]}
                      href={lang === "en" ? `${href}` : `/${lang}${href}`}
                    >
                      {singleLinkText}
                    </a>
                  )}
                </li>
              );
            },
          )
        }
      </ul>
    </nav>

    <!-- header right section, action buttons -->
    <div
      id="header-actions"
      class:list={[
        { "ml-auto": position === "left" },
        "hidden items-center fixed w-full justify-end left-0 bottom-0 p-3 md:self-center md:flex md:mb-0 md:w-auto md:static md:p-0",
      ]}
    >
      <div class="items-center flex justify-between w-full md:w-auto">
        <div class="flex">
          <!-- search -->
          {
            showSearch && (
              <span
                class="cursor-pointer rounded-lg text-sm p-2.5 inline-flex items-center hover:bg-gray-200 dark:hover:bg-gray-800"
                aria-label="Search"
                data-search-trigger
              >
                <Icon
                  name="tabler:search"
                  class="w-6 h-6 md:w-5 md:h-5 md:inline-block"
                />
              </span>
            )
          }

          {
            showLanguageSwitcher && (
              <LangPicker
                currentLang={lang}
                pathName={currentPath}
                languages={i18n}
              />
            )
          }

          <!-- toggle theme -->
          {
            showToggleTheme && (
              <ToggleTheme iconClass="w-6 h-6 block md:w-5 md:h-5 md:inline-block" />
            )
          }

          <!-- RSS feed -->
          <!-- {
            showRssFeed && (
              <a
                class="rounded-lg text-sm p-2.5 inline-flex items-center hover:bg-gray-200 dark:hover:bg-gray-800"
                aria-label="RSS Feed"
                href={getAsset("/rss.xml")}
              >
                <Icon
                  name="tabler:rss"
                  class="w-6 h-6 md:w-5 md:h-5 md:inline-block"
                />
              </a>
            )
          } -->

          <!-- Twitter -->
          {
            showTwitter && (
              <a
                class="rounded-lg text-sm p-2.5 inline-flex items-center hover:bg-gray-200 dark:hover:bg-gray-800"
                aria-label="Twitter"
                target="_blank"
                href="https://twitter.com/javayhu"
              >
                <Icon
                  name="tabler:brand-twitter"
                  class="w-6 h-6 md:w-5 md:h-5 md:inline-block"
                />
              </a>
            )
          }

          <!-- Github -->
          {
            showGithub && (
              <a
                class="rounded-lg text-sm p-2.5 inline-flex items-center hover:bg-gray-200 dark:hover:bg-gray-800"
                aria-label="Github"
                target="_blank"
                href="https://github.com/rayBlock/rem-astro"
              >
                <Icon
                  name="tabler:brand-github"
                  class="w-6 h-6 md:w-5 md:h-5 md:inline-block"
                />
              </a>
            )
          }
        </div>

        <!-- call to action buttons -->
        {
          actions?.length ? (
            <span class="ml-4">
              {actions.map((btnProps) => (
                <form action="/api/logout" method="POST">
                <Button
                  variant="default"
                  className="text-sm shadow-none font-semibold px-5 py-1.5"
                  data-search-trigger
                >
                  {btnProps.text}
                </Button>
                </form>
              ))}
            </span>
          ) : (
            ""
          )
        }
      </div>
    </div>
  </div>
</header>
